网络编程
一、概念
二、协议
三、如何使用TCP/IP和UDP开发程序
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
B/S:browser/server通讯，网页程序,
优点：更新快速，用户是无感觉服务器在更新。
缺点：体验不是很好，对网络的依赖性非常高

C/S:client/server通讯，桌面应用程序,
优点：开发的程序体验好（魔兽世界，魔兽争霸，星际争霸，暗黑破坏神，反恐精英，QQ），资源都存在本地硬盘
缺点：更新麻烦，需要下载更新文件，每当更新必停服务器
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
网络编程:目的是直接或间接的通过网路协议与其他计算机进行通讯
首先需要确定2件事：
1.对方计算机在什么地方（对方的主机名-->ip:port,例如：14.215.177.37:80）
2.要想让处于网络的主机互相通讯，除了对方的地址还不够，还需要遵循一定的规则（网络协议）

网络协议:最广泛最常见的主要协议TCP(传输控制协议)/IP(网络互联协议) ,实际上是一组协议
UDP:用户数据报协议

OSI(open system intercontent):传统的开放式系统互联参考模式
OSI 7层的体系			TCP/IP 4层的体系
应用层					应用层
表示层
会话层
传输层					传输层(TCP/IP和UDP协议)
网络层					网络层
数据链路层				网络接口层
物理层
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
二、协议
										连接						速度		安全性		通讯
TCP(传输控制协议)/IP(网络互联协议)		面向连接，在使用之前，		较慢		较高		两个进程间通讯(客户端，服务端)
										必须先建立TCP连接,
										使用结束必须关闭


UDP（用户数据报协议）					面向无连接，在使用之前，	较快		较低		两个进程间通讯(发送方，接收方)
										不必先建立UDP连接,
										使用结束不需要关闭
Socket:套接字，通信链路的端点
三、tcp/ip编程
1.创建服务端 ServerSocket ss = new ServerSocket(服务器端口);
2.执行ss.accept(),等待客户端连接服务端,当有客户端连接上服务端时，accept()将返回一个和客户端对接的socket（套接字）对象
3.客户端和服务端分别通过socket的输入输出流进行信息发送和接收
客户端     				服务端
OutputStream	==>		Inputstream
Inputstream		<==		OutputStream

四、UDP编程
1.首先接收者创建 DatagramSocket ds = new DatagramSocket(接收者的端口,接收者的地址);
2.执行ds.receive(packet)，阻塞等待发送者发送信息过来，装载到数据报对象packet
3.packet.getData()，得到信息
4.接着创建发送者 DatagramSocket ds = new DatagramSocket(发送者的端口,发送者的地址);
5.执行ds.send(packet)，发送数据报信息给接收者
发送者					接受者
DatagramPacket	<==>	DatagramPacket



