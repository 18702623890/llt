基本类型的转换：自动转型和强制转型,前提条件是，都是数值类型
自动转型:从小容量的类型转换成大容量的类型,例如：double money = 10;
强制转型:从大容量的类型转换成小容量的类型,需要使用--->(目标类型)被转的数据,例如：int i = (int)10.00; 
int  j = (int)"123";//被转的数据不可以是非数值，不可以超出目标类型的范围

int i = (int)10.0/3;//先将10.0强转成10,整型除于整型得到的一定整型,3
int j = (int)(10.0/3);//10.0除于3等于3.3333333,再执行强制转换，去除小数点后所有数据,3

注意：当基本数据类型运算过程中遇到了+字符串，则+号不再是加法而是拼接

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
运算符：
算术运算符：+,-,*,/,%,++,--,+字符串
		前自增++（自减--）：先加(减)后取值
		后自增++（自减--）：先取值后加(减)
赋值运算符：=,+=,-=,/=,*=,%=
比较运算符（关系）：==,!=,>,<,>=,<=
逻辑运算符：!,&&,||,&,|,^
三目（三元）运算符:  条件表达式?表达式1:表达式2
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
分支语句：
只有当条件表达式为true时，才会执行if内部的代码
if(条件表达式)
if(条件表达式)...else...
if(条件表达式1)...else if(条件表达式2)...else if(条件表达式3) ... else ...

注意：当执行时，条件表达式如果不为true,则不断判断执行下一个条件表达式，如果为true则执行该分支中的代码然后结束整个分支语句
使用场景：可满足区间条件判断，或等值条件判断

switch(常量值){//byte,short,char,int,String,enum值
	case 值1:执行代码;break;
	case 值2:执行代码;break;
	......
	default:执行代码;break;
}

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
调试：后台调试(eclipse)和前台调试(浏览器)
后台调试步骤：
1.在要调试的代码左边阴影区域双击设置断点(breakpoint)，或者使用右键设置(toggle breakpoint)
2.debug as方式运行程序,弹出窗口提示是否进入调试模式，选择yes
3.跟踪代码，观察右上角的变量区域，和中间的代码区域以及下方的控制台区域
4.按下F6逐过程,F5单步执行，F8执行结束或调到下一个断点处
5.程序运行结束












