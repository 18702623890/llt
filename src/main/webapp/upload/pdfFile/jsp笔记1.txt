学校私服服务器：
192.168.10.217:8081/nexus
外网用来搜索jar的网站
mvnrepository.com
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
程序架构：
c/s:桌面应用程序，client和server端的一种程序架构
使用这种架构软件时，需要的资源都是安装在本地硬盘，少量的数据和服务器交互，
在使用过程中的体验感是比较好的，且速度快
缺点是：更新起来比较费劲，比较慢
b/s:浏览器和服务器的一种程序架构
只要有浏览器就能访问需要的资源,不需要安装很庞大的安装文件，更新速度很快，
客户不需要停止自己的行为等待更新
缺点是：对网络要求很高，体验感不如c/s结构

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
b/s架构的程序工作原理就是：请求request和响应response的过程
所有用户都是通过浏览器输入一个url(统一资源定位符)进行访问web项目
url结构:
http://127.0.0.1:8020/teamOne/index.html?username=admin&password=123456
协议://主机ip:主机端口/项目名称/项目的某个资源名（或叫文件名）？键1=值1&键2=值2.....
网页访问协议还有https和http,ws(websocket)
127.0.0.1和localhost代表本机,端口号为80可以默认省略

外部的web服务器:tomcat,jetty,jboss(java项目),iis(发布微软asp项目的)
用于发布动态的web项目,目前使用比较频繁的是apache tomcat.
优点：开源，轻量级，稳定，速度快，占有资源小

到官网下载一个8.0左右的绿色版本,
tomcat解压之后的目录结构：
bin:存储tomcat的一些window下或linux下的执行文件,
	例如：启动服务：startup.bat(window),startup.sh(linux)
		  关闭服务：shutdown.bat(window),shutdown.sh(linux)
conf:存储了tomcat服务的配置文件(我经常要关注的)
	例如：server.xml中存储了修改tomcat访问的端口号信息(默认端口8080)，和防止数据乱码的设置(URIEncoding="UTF-8")
	<Connector URIEncoding="UTF-8" connectionTimeout="20000" port="8120" protocol="HTTP/1.1" redirectPort="8443"/>
lib:存放tomcat需要的jar文件库
logs:存放启动过程中的日志文件,查看catalina.xxxx.log文件启动的过程日志信息
temp:临时文件夹
webapps:存放我们需要发布的项目源代码(我经常要关注的)
work:存放的是启动之后被解析的jsp网页源代码java文件和编译后的class文件(我经常要关注的)

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tomcat访问过程中常见的几种错误：
404:找不到资源
	1.tomcat已经启动，但是没有发布项目
	2.url输入错误(端口号错误，资源路径错误，资源名称错误,项目名错误)
	3.不能将资源放到WEB-INF或META-INF文件夹中

500:服务器内部错误(空指针，下标越界，找不到对象，转换类型异常)

无法访问此网站:没有启动tomcat服务器,超时

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsp:java server page
执行原理
jsp--->当用户访问jsp-->1.服务器将jsp翻译成java类--->2.服务器将java类编译成class文件--》3.执行得到效果
在用户的第一次访问时才执行，当执行过一次之后，直接读取work下的缓存文件，以提高访问速度
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
jsp的组成：333791
3指令: 								 			
page:声明页面类型和编码格式及使用语言
include:动态引入文件
taglib:用于引入第三方标签库
			
3注释:
<!--客户端注释 -->
<%-- 服务器注释--%>
java注释:// ,/**/

3种脚本：
<%  %>:jsp小脚本
<%= %>:jsp表达式
<%! %>:声明全局变量

7动作(jsp标签)

9内置对象(不需要new的，由服务器提供) 
out:输出内容到页面




1html+css+js内容  




